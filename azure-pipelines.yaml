trigger:
  - master

variables:
  - name: major
    value: 0
  - name: minor
    value: 7
  - name: micro
    value: 0
  - name: DotNet3Version
    value: 3.1.x
  - name: DOTNET_SKIP_FIRST_TIME_EXPERIENCE
    value: true
  - name: DOTNET_CLI_TELEMETRY_OPTOUT
    value: 1
  - group: PackageSigningSecrets

name: $(major).$(minor).$(micro)-$(Rev:r)

jobs:
  - job: BuildAndPublishArtifacts
    pool:
      vmImage: Windows-2019
    steps:
      - task: UseDotNet@2
        displayName: Dotnet Prep
        inputs:
          packageType: sdk
          version: $(DotNet3Version)
      - task: SonarSource.sonarcloud.14d9cde6-c1da-4d55-aa01-2965cd301255.SonarCloudPrepare@1
        displayName: SonarCloud Prep
        inputs:
          SonarCloud: SonarCloud
          organization: steeltoeoss
          projectKey: Steeltoe_Incubator_Steeltoe_Initializr_WebApi
          extraProperties: |
              sonar.cs.opencover.reportsPaths=$(Build.SourcesDirectory)\**\*opencover.xml
              sonar.cs.vstest.reportsPaths=$(Agent.TempDirectory)\*.trx
              sonar.coverage.exclusions=**\*Test*\**\*
      - pwsh: dotnet tool install -g dotnet-reportgenerator-globaltool
        displayName: CodeCoverage Prep
      - task: DotNetCoreCLI@2
        displayName: Dotnet Restore
        inputs:
          command: restore
      - task: DotNetCoreCLI@2
        displayName: Dotnet Build
        inputs:
          command: build
          arguments: --no-restore /p:TreatWarningsAsErrors=True
      - task: DotNetCoreCLI@2
        displayName: Dotnet Test
        inputs:
          command: test
          arguments: --no-build /p:CollectCoverage=true /p:CoverletOutputFormat="opencover"
      - pwsh: reportgenerator "-reports:**\*.opencover.xml" "-targetdir:$(Build.SourcesDirectory)\CodeCoverage" -reporttypes:Cobertura
        displayName: CodeCoverage Analyze
        condition: always()
      - task: PublishCodeCoverageResults@1
        displayName: CodeCoverage Publish
        inputs:
          codeCoverageTool: Cobertura
          summaryFileLocation: $(Build.SourcesDirectory)\CodeCoverage\Cobertura.xml
          reportDirectory: $(Build.SourcesDirectory)\CodeCoverage
          condition: always()
      - bash: bash <(curl -s https://codecov.io/bash)
        displayName: CodeCoverage Upload
        condition: always()
      - task: SonarSource.sonarcloud.ce096e50-6155-4de8-8800-4221aaeed4a1.SonarCloudAnalyze@1
        displayName: SonarCloud Analyze
        condition: always()
      - task: SonarSource.sonarcloud.38b27399-a642-40af-bb7d-9971f69712e8.SonarCloudPublish@1
        displayName: SonarCloud Publish
        condition: always()
      - task: DotNetCoreCLI@2
        displayName: Dotnet Pack
        inputs:
          command: pack
          arguments: --no-build
      - task: Powershell@2
        displayName: Artifacts Sign
        inputs:
          filePath: sign\SignPackages.ps1
        env:
          SignClientUser: $(SignClientUser)
          SignClientSecret: $(SignClientSecret)
        condition:
          and(succeeded(), not(eq(variables['build.reason'], 'PullRequest')))
      - task: 'PublishBuildArtifacts@1'
        displayName: Artifacts Publish
          inputs:
            pathToPublish: $(Build.ArtifactStagingDirectory)
            artifactName: Packages
            publishLocation: Container
