trigger:
  - dev

variables:
  - name: major
    value: 0
  - name: minor
    value: 10
  - name: micro
    value: 0
  - name: DotNet3Version
    value: 3.1.402
  - name: DotNet2Version
    value: 2.0.x
  - name: DOTNET_SKIP_FIRST_TIME_EXPERIENCE
    value: true
  - name: DOTNET_CLI_TELEMETRY_OPTOUT
    value: 1
  - group: PackageSigningSecrets

name: $(major).$(minor).$(micro)-$(Rev:r)

jobs:
  - job: Build
    pool:
      vmImage: ubuntu-latest
    steps:
      - task: UseDotNet@2
        displayName: Install DotNet 3
        inputs:
          packageType: sdk
          version: $(DotNet3Version)
      - task: UseDotNet@2
        displayName: Install DotNet 2
        inputs:
          packageType: sdk
          version: $(DotNet2Version)
      - task: SonarSource.sonarcloud.14d9cde6-c1da-4d55-aa01-2965cd301255.SonarCloudPrepare@1
        displayName: Start SonarQube Analysis
        inputs:
          SonarCloud: SonarCloud
          organization: steeltoeoss
          projectKey: InitializrApi
          extraProperties: |
            sonar.cs.opencover.reportsPaths=$(Build.SourcesDirectory)/**/*.opencover.xml
      - task: DotNetCoreCLI@2
        displayName: DotNet Restore
        inputs:
          command: restore
      - task: DotNetCoreCLI@2
        displayName: DotNet Build
        inputs:
          command: build
          arguments: --no-restore /p:TreatWarningsAsErrors=True
      - task: DotNetCoreCLI@2
        displayName: DotNet Test
        inputs:
          command: test
          arguments: --no-build /p:CollectCoverage=true /p:CoverletOutputFormat=opencover
      - task: SonarSource.sonarcloud.ce096e50-6155-4de8-8800-4221aaeed4a1.SonarCloudAnalyze@1
        displayName: Stop SonarQube Analysis
      - task: SonarSource.sonarcloud.38b27399-a642-40af-bb7d-9971f69712e8.SonarCloudPublish@1
        displayName: Publish SonarQube Analysis
  - job: Publish
    dependsOn: Build
    pool:
      vmImage: ubuntu-latest
    steps:
      - task: DotNetCoreCLI@2
        displayName: DotNet Pack
        inputs:
          command: pack
          packagesToPack: src/InitializrApi.Models
          arguments: --no-build
        condition:
          and(succeeded(), not(eq(variables['build.reason'], 'PullRequest')))
      - task: Powershell@2
        displayName: Sign Nugets
        inputs:
          filePath: sign/SignPackages.ps1
        env:
          ArtifactStagingDirectory: $(Build.ArtifactStagingDirectory)
          SignClientUser: $(SignClientUser)
          SignClientSecret: $(SignClientSecret)
        condition:
          and(succeeded(), not(eq(variables['build.reason'], 'PullRequest')))
      - task: PublishBuildArtifacts@1
        displayName: Publish NuGets
        inputs:
          pathToPublish: $(Build.ArtifactStagingDirectory)
          artifactName: Packages
          publishLocation: Container
        condition:
          and(succeeded(), not(eq(variables['build.reason'], 'PullRequest')))
      - task: DotNetCoreCLI@2
        displayName: DotNet Publish
        inputs:
          command: publish
          arguments: --no-build
          zipAfterPublish: false
        condition:
          and(succeeded(), not(eq(variables['build.reason'], 'PullRequest')))
